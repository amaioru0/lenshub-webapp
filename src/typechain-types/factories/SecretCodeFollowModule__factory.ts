/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SecretCodeFollowModule,
  SecretCodeFollowModuleInterface,
} from "../SecretCodeFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "PasscodeInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "validateFollow",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161072638038061072683398101604081905261002f916100a0565b806001600160a01b038116610057576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b60805161062e6100f86000396000818160b3015281816101520152610207015261062e6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e096ae11461005c5780633cb22cc4146100715780639713958a14610085578063a4c52b86146100ae578063b4616a2a146100ed575b600080fd5b61006f61006a366004610425565b610100565b005b61006f61007f366004610481565b50505050565b6100986100933660046104c9565b610145565b6040516100a59190610515565b60405180910390f35b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a5565b61006f6100fb36600461056a565b6101ee565b600061010e828401846105a2565b600085815260208190526040902054909150811461013e5760405162c2385160e51b815260040160405180910390fd5b5050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610190576040516313bd2e8360e31b815260040160405180910390fd5b600061019e838501856105a2565b600086815260208181526040918290208390558151601f87018290048202810182019092528582529192509085908590819084018382808284376000920191909152509298975050505050505050565b60405163a9ec656360e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a91906105bb565b90506001600160a01b0381166102a357604051636992d36b60e11b815260040160405180910390fd5b8161032f576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a0823190602401602060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031291906105df565b61007f57604051636992d36b60e11b815260040160405180910390fd5b6040516331a9108f60e11b8152600481018390526001600160a01b038085169190831690636352211e90602401602060405180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906105bb565b6001600160a01b03161461007f57604051636992d36b60e11b815260040160405180910390fd5b6001600160a01b03811681146103d957600080fd5b50565b60008083601f8401126103ee57600080fd5b50813567ffffffffffffffff81111561040657600080fd5b60208301915083602082850101111561041e57600080fd5b9250929050565b6000806000806060858703121561043b57600080fd5b8435610446816103c4565b935060208501359250604085013567ffffffffffffffff81111561046957600080fd5b610475878288016103dc565b95989497509550505050565b6000806000806080858703121561049757600080fd5b8435935060208501356104a9816103c4565b925060408501356104b9816103c4565b9396929550929360600135925050565b6000806000604084860312156104de57600080fd5b83359250602084013567ffffffffffffffff8111156104fc57600080fd5b610508868287016103dc565b9497909650939450505050565b600060208083528351808285015260005b8181101561054257858101830151858201604001528201610526565b81811115610554576000604083870101525b50601f01601f1916929092016040019392505050565b60008060006060848603121561057f57600080fd5b833592506020840135610591816103c4565b929592945050506040919091013590565b6000602082840312156105b457600080fd5b5035919050565b6000602082840312156105cd57600080fd5b81516105d8816103c4565b9392505050565b6000602082840312156105f157600080fd5b505191905056fea26469706673582212205a6712b4206f5b75fab964faed2a6299e71d43f5349cd27b62856ba7ae5d0dbe64736f6c634300080a0033";

type SecretCodeFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecretCodeFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecretCodeFollowModule__factory extends ContractFactory {
  constructor(...args: SecretCodeFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecretCodeFollowModule> {
    return super.deploy(
      hub,
      overrides || {}
    ) as Promise<SecretCodeFollowModule>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): SecretCodeFollowModule {
    return super.attach(address) as SecretCodeFollowModule;
  }
  connect(signer: Signer): SecretCodeFollowModule__factory {
    return super.connect(signer) as SecretCodeFollowModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecretCodeFollowModuleInterface {
    return new utils.Interface(_abi) as SecretCodeFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecretCodeFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SecretCodeFollowModule;
  }
}
